<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:components="components.*"
		add="viewAddHandler(event)" destructionPolicy="never" title="Information">
	<fx:Declarations>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	<fx:Script>
	<![CDATA[
		import models.RecordModel;
		import models.RecordInfoModel;
		
		import spark.components.supportClasses.ViewReturnObject;
		import spark.transitions.SlideViewTransition;
		import spark.transitions.SlideViewTransitionMode;
		import spark.transitions.ViewTransitionDirection;
		
		private var _record:RecordInfoModel;
		
		private function backButtonClickHandler(event:MouseEvent):void
		{
			this.navigator.popView();
		}
			
		private function editButtonClickHandler(event:MouseEvent):void
		{
			var v:SlideViewTransition = new SlideViewTransition();
			v.mode = SlideViewTransitionMode.COVER;
			v.direction = ViewTransitionDirection.UP;
			this.navigator.pushView(EditRecordView, data, null, v);
		}
			
		public override function createReturnObject():Object{
			return data;
		}
		
		private function viewAddHandler(event:Event):void
		{
			
			// popで遷移してきたのかpushで遷移してきたのか判定
			var o:ViewReturnObject = navigator.poppedViewReturnedObject;
			if (o != null && o.object is RecordInfoModel)
			{ // popで遷移してきた
				_record = o.object as RecordInfoModel;
				playButton.enabled = true;
			}
			else if (data != null) // pushで遷移してきた
			{
				_record = data as RecordInfoModel;
				playButton.enabled = true;
			}
			else //destrunctionPolicy=autoのときは、アプリ再開がこの画面のときはpoppedViewReturnedObjectとdataはnullになっている。またpopであってもnullがかえってきたとき。
			{ // TODO:destructionPolicy=neverのときはそもそもAddイベントが起きないようだが要調査。.
				// do nothing
				return;
			}
		
			info.titleTextInput.text = _record.title;
			info.commentTextArea.text = _record.comment;
			info.creationDate = _record.getCreationDate().toLocaleString();
		}
		
		private function playButtonClickHandler(event:MouseEvent):void
		{
			var v:SlideViewTransition = new SlideViewTransition();
			v.mode = SlideViewTransitionMode.COVER;
			v.direction = ViewTransitionDirection.UP;
			this.navigator.pushView(BoardView, _record, null, v);
		}
		
		// TODO:削除時には確認ダイアログが必要
		private function deleteButtonClickHandler(event:MouseEvent):void
		{
			if (data != null) // アプリ再開がこの画面のときはdataはnullになっている
			{
				RecordModel.getInstance().deleteRecord(data as RecordInfoModel);
			}
			this.navigator.popView();
		}
	]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button label="Back" click="backButtonClickHandler(event)"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button label="Edit" click="editButtonClickHandler(event)"/>
	</s:actionContent>
	<s:layout>
		<s:VerticalLayout gap="20" horizontalAlign="center"/>
	</s:layout>
	<components:RecordInformation id="info" currentState="show" gap="20" paddingBottom="10"
								  paddingLeft="10" paddingRight="10" paddingTop="10"/>
	<s:HGroup gap="20" horizontalAlign="center" paddingLeft="0">
		<s:Button id="playButton" width="90" height="25" label="PLAY" cacheAsBitmap="true"
				  click="playButtonClickHandler(event)" fontSize="12" fontStyle="normal"
				  fontWeight="bold" enabled="false"/>
		<!-- TODO 3D機能はいずれ作る
		<s:Button id="play3dButton" width="90" height="25" label="PLAY 3D" cacheAsBitmap="true"
				  fontSize="12" fontStyle="normal" fontWeight="bold"/>
		-->
		<s:Button id="deleteButton" width="90" height="25" label="DELETE" cacheAsBitmap="true"
				  click="deleteButtonClickHandler(event)" fontSize="12" fontStyle="normal"
				  fontWeight="bold"/>
	</s:HGroup>
</s:View>
