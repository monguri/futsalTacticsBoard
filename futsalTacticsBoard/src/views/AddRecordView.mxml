<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:views="views.*"
		xmlns:components="components.*"
		add="viewAddHandler(event)" destructionPolicy="never" title="AddRecord">
	<fx:Declarations>
		<components:Dialog id="alertDialog"/>
		<!-- 非ビジュアルエレメント (サービス、値オブジェクトなど) をここに配置 -->
	</fx:Declarations>
	<fx:Script>
	<![CDATA[
		import models.Const;
		import models.RecordModel;
		
		import spark.transitions.SlideViewTransition;
		import spark.transitions.SlideViewTransitionMode;
		import spark.transitions.ViewTransitionDirection;
		
		
		/* ファイルを保存するかどうか */
		private var saveFlag:Boolean = false;

		private function cancelButtonClickHandler(event:MouseEvent):void
		{
			var v:SlideViewTransition = new SlideViewTransition();
			v.mode = SlideViewTransitionMode.UNCOVER;
			v.direction = ViewTransitionDirection.DOWN;
			this.navigator.popView(v);
			saveFlag = false;
		}
			
		private function doneButtonClickHandler(event:MouseEvent):void
		{
			saveFlag = true;
			
			var curNumRecords:uint = RecordModel.getInstance().getNumberRecords();
			if (curNumRecords + 1 == Const.RECORD_NUMBER_LIMIT)
			{
				alertDialog.show(this, Const.RECORDS_NUMBER_FULL_WARNING, "Limit Alert", Dialog.BUTTON_OK);
			}
			else if (curNumRecords >= Const.RECORD_NUMBER_LIMIT)
			{
				alertDialog.show(this, Const.RECORDS_NUMBER_OVER_LIMIT_ERROR, "Save Failed", Dialog.BUTTON_OK);
				saveFlag = false;
			}
			
			//TODO:Modelに直接触るのはよくない
//			RecordModel.getInstance().titleBuffer = info.titleTextInput.text;
//			RecordModel.getInstance().commentBuffer = info.commentTextArea.text;
			RecordModel.getInstance().recordBean.title = info.titleTextInput.text;
			RecordModel.getInstance().recordBean.comment = info.commentTextArea.text;
			
			var v:SlideViewTransition = new SlideViewTransition();
			v.mode = SlideViewTransitionMode.UNCOVER;
			v.direction = ViewTransitionDirection.DOWN;
			this.navigator.popView(v);
		}
			
		public override function createReturnObject():Object{
			// TODO:Booleanで判断させるのはよい作りではない
			return saveFlag;
		}
		
		private function viewAddHandler(event:Event):void
		{
			info.recordTextsChangeCallback = recordTextsChangeHandler;
			doneButton.enabled = RecordModel.getInstance().isValidText(info.titleTextInput.text)
									&& RecordModel.getInstance().isValidText(info.commentTextArea.text);
		}
		
		private function recordTextsChangeHandler():void
		{
			var valid:Boolean = RecordModel.getInstance().isValidText(info.titleTextInput.text) && RecordModel.getInstance().isValidText(info.commentTextArea.text);
			doneButton.enabled = valid;
			if (!valid)
			{
				alertDialog.show(this, Const.INVALID_CHARACTER_ERROR, "Invalid Char Alert", Dialog.BUTTON_OK);
			}
		}
	]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button label="Cancel" click="cancelButtonClickHandler(event)"/>
	</s:navigationContent>
	<s:actionContent>
		<s:Button id="doneButton" label="Done" click="doneButtonClickHandler(event)" enabled="false"/>
	</s:actionContent>
	<components:RecordInformation id="info" currentState="edit" gap="20" paddingBottom="10"
								  paddingLeft="10" paddingRight="10" paddingTop="10"/>
</s:View>
